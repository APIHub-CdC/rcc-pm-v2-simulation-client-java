/*
 * Reporte de Crédito Consolidado Personas Morales
 * <p>PI Reporte de Crédito Consolidado de Personas Morales. <br/><br><img src='https://developer.circulodecredito.com.mx/sites/default/files/2024-01/Logo-Swaggers.png' height='70' width='270'/></p><br/>
 *
 * OpenAPI spec version: 1.0.0
 * Contact: api@circulodecredito.com.mx
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.RCCPM.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModelProperty;

/**
 * PersonaRespuesta
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-12-10T17:56:34.445680493Z[GMT]")

public class PersonaRespuesta {
  @SerializedName("nombre")
  private String nombre = null;

  @SerializedName("RFC")
  private String RFC = null;

  @SerializedName("nacionalidad")
  private CatalogoPaisNacionalidad nacionalidad = null;

  @SerializedName("domicilio")
  private Domicilio domicilio = null;

  public PersonaRespuesta nombre(String nombre) {
    this.nombre = nombre;
    return this;
  }

   /**
   * Nombre de la compañía (Persona Moral) o primer nombre de la Persona Física con Actividad Empresarial.
   * @return nombre
  **/
  @ApiModelProperty(example = "EMPRESA TESTER SA DE CV")
  public String getNombre() {
    return nombre;
  }

  public void setNombre(String nombre) {
    this.nombre = nombre;
  }

  public PersonaRespuesta RFC(String RFC) {
    this.RFC = RFC;
    return this;
  }

   /**
   * RFC de la compañía. El dato debe ser capturado, pues aplica para el proceso de búsqueda e integración de expedientes.
   * @return RFC
  **/
  @ApiModelProperty(example = "ETS980201AN1")
  public String getRFC() {
    return RFC;
  }

  public void setRFC(String RFC) {
    this.RFC = RFC;
  }

  public PersonaRespuesta nacionalidad(CatalogoPaisNacionalidad nacionalidad) {
    this.nacionalidad = nacionalidad;
    return this;
  }

   /**
   * Get nacionalidad
   * @return nacionalidad
  **/
  @ApiModelProperty()
  public CatalogoPaisNacionalidad getNacionalidad() {
    return nacionalidad;
  }

  public void setNacionalidad(CatalogoPaisNacionalidad nacionalidad) {
    this.nacionalidad = nacionalidad;
  }

  public PersonaRespuesta domicilio(Domicilio domicilio) {
    this.domicilio = domicilio;
    return this;
  }

   /**
   * Get domicilio
   * @return domicilio
  **/
  @ApiModelProperty()
  public Domicilio getDomicilio() {
    return domicilio;
  }

  public void setDomicilio(Domicilio domicilio) {
    this.domicilio = domicilio;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PersonaRespuesta personaRespuesta = (PersonaRespuesta) o;
    return Objects.equals(this.nombre, personaRespuesta.nombre) &&
        Objects.equals(this.RFC, personaRespuesta.RFC) &&
        Objects.equals(this.nacionalidad, personaRespuesta.nacionalidad) &&
        Objects.equals(this.domicilio, personaRespuesta.domicilio);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nombre, RFC, nacionalidad, domicilio);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PersonaRespuesta {\n");
    
    sb.append("    nombre: ").append(toIndentedString(nombre)).append("\n");
    sb.append("    RFC: ").append(toIndentedString(RFC)).append("\n");
    sb.append("    nacionalidad: ").append(toIndentedString(nacionalidad)).append("\n");
    sb.append("    domicilio: ").append(toIndentedString(domicilio)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
